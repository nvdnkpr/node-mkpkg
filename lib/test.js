// Generated by CoffeeScript 1.6.3
var merge, mkpkg, stream;

stream = require('stream');

mkpkg = require('./mkpkg');

merge = require('./merge');

module.exports = function(steps, options, callback) {
  var index, input, k, opts, out, output, v;
  if (arguments.length === 2) {
    callback = options;
    options = {};
  }
  index = 0;
  out = '';
  input = new stream.Readable;
  input._read = function() {
    return '';
  };
  output = new stream.Writable;
  output.isTTY = true;
  output._write = function(chunk, encoding, callback) {
    chunk = chunk.toString();
    out += chunk;
    if (options.debug) {
      console.log(index, JSON.stringify(chunk));
    }
    if (typeof steps[index] === "function" ? steps[index](chunk, input) : void 0) {
      index++;
    }
    return callback();
  };
  opts = {
    input: input,
    output: output
  };
  for (k in options) {
    v = options[k];
    opts[k] = v;
  }
  return mkpkg(opts).on('quit', function(code) {
    return callback(null, out);
  }).on('error', function(err) {
    return callback(err);
  });
};
